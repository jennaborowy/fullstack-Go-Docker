version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: myapp-postgres
    env_file:
      - config.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydb"]
      interval: 5s
      timeout: 5s
      retries: 5
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: myapp-backend
    env_file:
      - config.env
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: on-failure

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: myapp-frontend
    stdin_open: true   # prevents the frontend from immediate exit
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - app-network
    volumes:
      - ./frontend/src:/app/src  # Hot reload for development

  adminer:
    image: adminer
    container_name: myapp-adminer
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge